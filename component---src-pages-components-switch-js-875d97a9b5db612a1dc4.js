webpackJsonp([0x8f89e96c3eb1],{220:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function s(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var o=n(1),r=a(o),d=n(7),h=(a(d),n(12)),u=a(h),i=n(13),f=a(i);n(19);var m=n(11),p=a(m),g=n(25),k=(a(g),n(23)),y=function(e){function t(){var n,a,s;c(this,t);for(var o=arguments.length,r=Array(o),d=0;d<o;d++)r[d]=arguments[d];return n=a=l(this,e.call.apply(e,[this].concat(r))),a.state={checkedA:!1,checkedB:!0},s=n,l(a,s)}return s(t,e),t.prototype.handleChange=function(e){var t,n=e.target,a="checkbox"===n.type?n.checked:n.value,c=n.name;this.setState((t={},t[c]=a,t))},t.prototype.render=function(){return r.default.createElement("div",{className:"ds-app-grid"},r.default.createElement(u.default,null),r.default.createElement("div",{className:"ds-main-content"},r.default.createElement("div",{className:"ds-container"},r.default.createElement("h1",null,"Switch"),r.default.createElement("h3",{className:"subheading"},"Binary switches toggles the state of a single settings option. "),r.default.createElement("div",{className:"ds-col-container"},r.default.createElement("div",{className:"ds-col-6"},r.default.createElement(k.DSSwitch,{name:"checkedA",onChange:this.handleChange,checked:this.state.checkedA})),r.default.createElement("div",{className:"ds-col-6"},r.default.createElement(k.DSSwitch,{name:"checkedB",onChange:this.handleChange,checked:this.state.checkedB}))),r.default.createElement("h4",{className:"ds-usage-title"},"Usage"),r.default.createElement("p",null,"Switches are tools the user has to communicate something to the app. In this system they are a Presentational React Components that you can use by simply instantiate a ",r.default.createElement("code",null,"DSSwitch")," tag and passing attributes for name ",r.default.createElement("code",null,"(string)"),", onChange ",r.default.createElement("code",null,"(function)"),", and checked ",r.default.createElement("code",null,"(boolean)"),"."),r.default.createElement(f.default,{className:"jsx"},'class DemoPage extends React.Component {\n  state = {\n    checkedA: false,\n    checkedB: true,\n  };\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === \'checkbox\' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n\n      <DSSwitch\n        name="checkedA"  \n        onChange={this.handleChange}\n        checked={this.state.checkedA}\n      />\n              \n      <DSSwitch\n        name="checkedB"  \n        onChange={this.handleChange}\n        checked={this.state.checkedB}\n      />\n    )\n  }\n}')),r.default.createElement(p.default,null)))},t}(r.default.Component);t.default=y,e.exports=t.default}});
//# sourceMappingURL=component---src-pages-components-switch-js-875d97a9b5db612a1dc4.js.map