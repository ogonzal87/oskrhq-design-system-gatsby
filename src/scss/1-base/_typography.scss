@import url('https://fonts.googleapis.com/css?family=Lato:300,300i,400,400i,700,700i');
$ds-base-font-family:     'Lato', sans-serif;
$ds-base-font-size:       14px;
$ds-base-font-weight:     400;

$ds-base-text-color:      ds-color(neutral, 700);
$ds-brand-text-color:     ds-color(primary, 400);
$ds-secondary-text-color: ds-color(neutral, 500);
$ds-base-link-text-color: $ds-brand-text-color;

html {
  font-family: $ds-base-font-family;
  font-size: $ds-base-font-size;
  font-weight: $ds-base-font-weight;
  color: $ds-base-text-color;
}

// Data for each Type Style defined in the Style Sheet. 
$ds-font-size-data: (
  display4: (
    base: $ds-base-font-size * 8
  ),
  display3: (
    base: $ds-base-font-size * 4
  ),
  display2: (
    base: $ds-base-font-size * 3.21
  ),  
  display1: (
    base: $ds-base-font-size  * 2.43
  ),
  headline: (
    base: $ds-base-font-size * 1.72
  ),
  title: (
    base: $ds-base-font-size * 1.43
  ),
  subheading: (
    base: $ds-base-font-size * 1.14
  ),
  body2: (
    base: $ds-base-font-size 
  ),
  body1: (
    base: $ds-base-font-size 
  ),
  caption: (
    base:  $ds-base-font-size * 0.857
  ),
  button: (
    base:  $ds-base-font-size 
  ),
  link: (
    base: $ds-base-font-size 
  ),
  list: (
    base: $ds-base-font-size
  )
);

// Data for each Type Style defined in the Style Sheet. 
$ds-line-height-data: (
  display4: (
    base: 1.1
  ),
  display3: (
    base: 1.1
  ),
  display2: (
    base: 1.1
  ),  
  display1: (
    base: 1.1
  ),
  headline: (
    base: 1.1
  ),
  title: (
    base: 1.1
  ),
  subheading: (
    base: 1.1
  ),
  body2: (
    base: 1.5
  ),
  body1: (
    base: 1.5 
  ),
  caption: (
    base:  1.5
  ),
  button: (
    base:  1.5
  ),
  link: (
    base: 1.5
  ),
  list: (
    base: 1.5
  )
);


// Data for each Type Style defined in the Style Sheet.   
$ds-font-weight-data: (
  display4: (
    base: $ds-base-font-weight * 1.25,
    semibold: $ds-base-font-weight * 1.5,
    bold: $ds-base-font-weight * 2
  ),
  display3: (
    base: $ds-base-font-weight * 1.25,
    semibold: $ds-base-font-weight * 1.5,
    bold: $ds-base-font-weight * 2
  ),
  display2: (
   base: $ds-base-font-weight * 1.25,
    semibold: $ds-base-font-weight * 1.5,
    bold: $ds-base-font-weight * 2
  ),  
  display1: (
    base: $ds-base-font-weight * 1.25,
    semibold: $ds-base-font-weight * 1.5,
    bold: $ds-base-font-weight * 2
  ),
  headline: (
    base: $ds-base-font-weight * 1.25,
    semibold: $ds-base-font-weight * 1.5,
    bold: $ds-base-font-weight * 2
  ),
  title: (
    base: $ds-base-font-weight * 1.25,
    semibold: $ds-base-font-weight * 1.5,
    bold: $ds-base-font-weight * 2
  ),
  subheading: (
    base: $ds-base-font-weight * 1.50,
    semibold: $ds-base-font-weight * 1.5,
    bold: $ds-base-font-weight * 2
  ),
  body2: (
    base: $ds-base-font-weight,
    semibold: $ds-base-font-weight * 1.5,
    bold: $ds-base-font-weight * 2
  ),
  body1: (
    base: $ds-base-font-weight,
    semibold: $ds-base-font-weight * 1.5,
    bold: $ds-base-font-weight * 2
  ),
  caption: (
    base: $ds-base-font-weight,
    semibold: $ds-base-font-weight * 1.5,
    bold: $ds-base-font-weight * 2
  ),
  button: (
    base: $ds-base-font-weight,
    semibold: $ds-base-font-weight * 1.5,
    bold: $ds-base-font-weight * 2
  ),
  link: (
    base: $ds-base-font-weight,
    semibold: $ds-base-font-weight * 1.5,
    bold: $ds-base-font-weight * 2
  ),
  list: (
    base: $ds-base-font-weight,
    semibold: $ds-base-font-weight * 1.5,
    bold: $ds-base-font-weight * 2
  )
);

/////////////////////////////////////////////////////////////////////////////
/// Utility Typographic Functions
/////////////////////////////////////////////////////////////////////////////
/// Returns the line height for a given text style and variant.
///
/// @param {String} $style - The font style.
/// @param {String} $variant [base] - The variant on the font-size.
/// @return {Number} The line-height for the text-style.
@function ds-line-height($style, $variant: base) {
  $fetched-line-height: map-get(map-get($ds-line-height-data, $style), $variant);
  @if type-of($fetched-line-height) != null {
    @return $fetched-line-height;
  } @else {
    @error 'Line height `#{$style} - #{$variant}` not found. Available line heights: #{available-names($ds-line-height-data)}';
  }
}
/// Returns the font size for a given text style and variant.
///
/// @param {String} $style - The font style.
/// @param {String} $variant [base] - The variant on the font-size.
/// @return {Number} The font-size for the text-style.
@function ds-font-size($style, $variant: base) {
  $fetched-font-size: map-get(map-get($ds-font-size-data, $style), $variant);
  @if type-of($fetched-font-size) != null {
    @return $fetched-font-size;
  } @else {
    @error 'Font size `#{$style} - #{$variant}` not found. Available font sizes: #{available-names($ds-font-size-data)}';
  }
}
/// Returns the font size for a given text style and variant.
///
/// @param {String} $style - The font style.
/// @param {String} $variant [base] - The variant on the font-size.
/// @return {Number} The font-size for the text-style.
@function ds-font-weight($style, $variant: base) {
  $fetched-font-weight: map-get(map-get($ds-font-weight-data, $style), $variant);
  @if type-of($fetched-font-weight) != null {
    @return $fetched-font-weight;
  } @else {
    @error 'Font weight `#{$style} - #{$variant}` not found. Available font weights: #{available-names($ds-font-weight-data)}';
  }
}



/// Mixins for each Typographic Style. These map directly to the Website's Style Sheet. 

@mixin ds-display4-text-style() {
  font-size:   ds-font-size(display4, base);
  line-height: ds-line-height(display4, base);
  font-weight: ds-font-weight(display4, base);
  color:       $ds-base-text-color;
  text-rendering: optimizeLegibility;
}

@mixin ds-display3-text-style() {
  font-size:   ds-font-size(display3, base);
  line-height: ds-line-height(display3, base);
  font-weight: ds-font-weight(display3, base);
  color:       $ds-base-text-color;
  text-rendering: optimizeLegibility;
}

@mixin ds-display2-text-style() {
  font-size:   ds-font-size(display2, base);
  line-height: ds-line-height(display2, base);
  font-weight: ds-font-weight(display2, base);
  color:       $ds-base-text-color;
  text-rendering: optimizeLegibility;
}

@mixin ds-display1-text-style() {
  font-size:   ds-font-size(display1, base);
  line-height: ds-line-height(display1, base);
  font-weight: ds-font-weight(display1, base);
  color:       $ds-base-text-color;
  text-rendering: optimizeLegibility;
}

@mixin ds-headline-text-style() {
  font-size:   ds-font-size(headline, base);
  line-height: ds-line-height(headline, base);
  font-weight: ds-font-weight(headline, base);
  color:       $ds-base-text-color;
  text-rendering: optimizeLegibility;
}

@mixin ds-title-text-style() {
  font-size:   ds-font-size(title, base);
  line-height: ds-line-height(title, base);
  font-weight: ds-font-weight(title, base);
  color:       $ds-base-text-color;
  text-rendering: optimizeLegibility;
}

@mixin ds-subheading-text-style() {
  font-size:   ds-font-size(subheading, base);
  line-height: ds-line-height(subheading, base);
  font-weight: ds-font-weight(subheading, base);
  color:       $ds-base-text-color;
  text-rendering: optimizeLegibility;
}

@mixin ds-body2-text-style() {
  font-size:   ds-font-size(body2, base);
  line-height: ds-line-height(body2, base);
  font-weight: ds-font-weight(body2, base);
  color:       $ds-base-text-color;
}

@mixin ds-body1-text-style() {
  font-size:   ds-font-size(body1, base);
  line-height: ds-line-height(body1, base);
  font-weight: ds-font-weight(body1, base);
  color:       $ds-base-text-color;
  text-rendering: optimizeLegibility;
}

@mixin ds-caption-text-style() {
  font-size:   ds-font-size(caption, base);
  line-height: ds-line-height(caption, base);
  font-weight: ds-font-weight(caption, base);
  color:       $ds-base-text-color;
  text-rendering: optimizeLegibility;
}

@mixin ds-button-text-style() {
  font-size:   ds-font-size(button, base);
  line-height: ds-line-height(button, base);
  font-weight: ds-font-weight(button, base);
  color:       $ds-base-text-color;
  text-rendering: optimizeLegibility;
}

@mixin ds-link-text-style() {
  font-size:   ds-font-size(link, base);
  line-height: ds-line-height(link, base);
  font-weight: ds-font-weight(link, base);
  color:       $ds-brand-text-color;
  text-rendering: optimizeLegibility;
}

@mixin ds-list-text-style() {
  font-size:   ds-font-size(list, base);
  line-height: ds-line-height(list, base);
  font-weight: ds-font-weight(list, base);
  color:       $ds-base-text-color;
  text-rendering: optimizeLegibility;
}


// Connecting the Typographic styles defined above to Type-HTML elements
h1 {
  margin-top: 2rem;
  margin-bottom: .75rem;
  @include ds-display3-text-style();
}

h2 {
  margin-top: 1.5rem;
  margin-bottom: .5rem;
  @include ds-display2-text-style();
}

h3 {
  margin-top: 1.5rem;
  margin-bottom: .75rem;
  @include ds-display1-text-style();
}

h4 {
  margin-top: 1rem;
  @include ds-headline-text-style();
}

h5 {
  margin-top: 1rem;
  @include ds-title-text-style();
}

h6 {
  margin-top: 1rem;
  @include ds-subheading-text-style();
}

p {
  margin-top: 1rem;
  margin-bottom: 1rem;
  @include ds-body1-text-style();
}

.ds-caption {
  margin-top: .75rem;
  margin-bottom: 1rem;
  @include ds-caption-text-style();
}

ul, ol {
  margin-top: .75rem;
  margin-bottom: .75rem;
  @include ds-list-text-style();
}

a {
  margin-top: 1rem;
  margin-bottom: 1rem;
  text-decoration: none;
  @include ds-link-text-style();
}