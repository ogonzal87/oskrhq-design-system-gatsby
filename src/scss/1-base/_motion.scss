$unit: 100ms;

$duration-data: (
  fast: $unit,
  base: $unit * 2,
  slow: $unit * 3,
  slower: $unit * 4,
  slowest: $unit * 5,
);


$easing-data: (
  base: cubic-bezier(0.64, 0, 0.35, 1),
  in: cubic-bezier(0.36, 0, 1, 1),
  out: cubic-bezier(0, 0, 0.42, 1),
  excite: cubic-bezier(0.18, 0.67, 0.6, 1.22),
  overshoot: cubic-bezier(0.07, 0.28, 0.32, 1.22),
  anticipate: cubic-bezier(0.38, -0.4, 0.88, 0.65),
);

/// Returns the duration value for a given variant.
///
/// @param {String} $variant - The key for the given variant.
/// @return {Number} The spacing for the variant (in miliseconds).

@function ds-duration($variant: base) {
  $fetched-value: map-get($duration-data, $variant);

  @if type-of($fetched-value) == number {
    @return $fetched-value;
  } @else {
    @error 'Duration variant `#{$variant}` not found. Available variants: #{available-names($duration-data)}';
  }
}

/// Returns the timing-function value for a given variant.
///
/// @param {String} $variant - The key for the given variant.
/// @return {String} The cubic-bezier function (string) for the variant.

@function ds-easing($variant: base) {
  $fetched-value: map-get($easing-data, $variant);

  @if type-of($fetched-value) == string {
    @return $fetched-value;
  } @else {
    @error 'Easing variant `#{$variant}` not found. Available variants: #{available-names($easing-data)}';
  }
}