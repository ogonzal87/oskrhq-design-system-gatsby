$ds-color-palette-data: (
  neutral: (
    700: #2F3946,
    600: #828890,
    500: #A1A6AC,
    400: #C0C3C7,
    300: #E0E2E4,
    200: #EAEBEC,
    000: #FFFFFF
  ),

  primary: (
    700: #20205E,
    600: #31318E,
    500: #4545C9,
    400: #5252ED,
    300: #6B6BEF,
    200: #9797F4,
    100: #B9B9F7
  ),

  secondary: (
    700: #493564,
    600: #6E4F96,
    500: #9C71D5,
    400: #B885FB,
    300: #C297FB,
    200: #D4B5FC,
    100: #E2CEFD
  ),

  tertiary: (
    700: #174265,
    600: #226398,
    500: #318DD8,
    400: #3AA6FE,
    300: #57B3FE,
    200: #88C9FE,
    100: #B0DBFE
  ),

  info: (
    700: #1A3561,
    600: #274F92,
    500: #3871CF,
    400: #4285F4,
    300: #5E97F5,
    200: #8DB5F8,
    100: #B3CEFA
  ),

  warning: (
    700: #654E1A,
    600: #987627,
    500: #D8A737,
    400: #FEC541,
    300: #FECD5D,
    200: #FEDC8D,
    100: #FEE7B3
  ),

  danger: (
    700: #662222,
    600: #993333,
    500: #D94949,
    400: #FF5656,
    300: #FF6F6F,
    200: #FF9999,
    100: #FFBBBB
  ),

  success: (
    700: #15502E,
    600: #1F7845,
    500: #2DAA61,
    400: #35C873,
    300: #53D087,
    200: #85DEAB,
    100: #AEE9C7
  )
);

$app-background-color: ds-color(neutral, 700);

html {
  background: $app-background-color;
}

/// Returns the color value for a given color name and group.
///
/// @param {String} $hue - The color's hue.
/// @param {String} $value - The darkness/lightness of the color. Defaults to base.
/// @param {Color} $for-background - The background color on which this color will
/// appear. Applies a multiply filter to ensure appropriate contrast.
/// @return {Color} The color value.

@function ds-color($hue, $value: 700, $for-background: null) {
  $fetched-color: map-get(map-get($ds-color-palette-data, $hue), $value);

  @if map-has-key($ds-color-palette-data, $fetched-color) {
    $fetched-color: map-get(map-get($ds-color-palette-data, $fetched-color), $value);
  }

  @if $for-background != null {
    $fetched-color: color-multiply($fetched-color, $for-background);
  }

  @if type-of($fetched-color) == color {
    @return $fetched-color;
  } @else {
    @error 'Color `#{$hue} - #{$value}` not found. Available colors: #{available-names($ds-color-palette-data)}';
  }
}

// Darkens the foreground color by the background color. This is the same as the
/// “multiply” filter in graphics apps.
///
/// @param {Color} $foreground - The color to darken.
/// @param {Color} $background - The background to base darkening on.
/// @return {Color} The modified color.
@function ds-color-multiply($foreground, $background: null) {
  @if $background == null {
    $background: #ffffff;
  }
  @return $foreground * $background / 255;
}

